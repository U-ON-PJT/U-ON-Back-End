<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.uon.message.model.mapper.MessageMapper">
<!--        <select id="selectMessage" parameterType="map" resultType="message">-->
<!--            <choose>-->
<!--                <when test="type == 0">-->
<!--                    select message_id, receiver_id, title, send_time, is_read, is_delete, type-->
<!--                    from message-->
<!--                    where sender_id = #{userId}-->
<!--                    and is_delete != 1-->
<!--                    order by message_id DESC-->
<!--                    limit #{size} offset #{offset};-->
<!--                </when>-->
<!--                <otherwise>-->
<!--                    select message_id, sender_id, title, send_time, is_read, is_delete-->
<!--                    from message-->
<!--                    where receiver_id = #{userId}-->
<!--                    and is_delete != 2-->
<!--                    order by message_id DESC-->
<!--                    limit #{size} offset #{offset};-->
<!--                </otherwise>-->
<!--            </choose>-->
<!--        </select>-->

    <select id="selectMessage" parameterType="map" resultType="message">
            select message_id, sender_id, receiver_id, title, send_time, is_read, is_delete
            from message
            where sender_id = #{userId} or receiver_id = #{userId}
            order by message_id DESC
            limit #{size} offset #{offset};
    </select>

        <select id="totalRow" parameterType="map" resultType="int">
            select count(*)
            from message
        </select>

        <select id="isReadCount" parameterType="map" resultType="int">
            select count(message_id)
            from message
            where receiver_id = #{userId}
            and is_read = 0;
        </select>

        <select id="isReceiver" parameterType="int" resultType="message">
            select receiver_id, is_read
            from message
            where message_id = #{messageId};
        </select>

        <update id="firstRead" parameterType="int">
            update message set is_read = 1
            where message_id = #{messageId};
        </update>

        <select id="findById" parameterType="int" resultType="message">
            select message_id, receiver_id, sender_id, title, content, send_time, is_read, is_delete
            from message
            where message_id = #{messageId};
        </select>

        <insert id="sendMessage" parameterType="message">
            insert into message(sender_id, receiver_id, title, content)
            values (#{senderId}, #{receiverId}, #{title}, #{content});
        </insert>

        <delete id="deleteMessage" parameterType="int">
            delete from message where message_id = #{messageId};
        </delete>

        <update id="senderDelete" parameterType="int">
            update message set is_delete = 1 where message_id = #{messageId};
        </update>

        <update id="receiverDelete" parameterType="int">
            update message set is_delete = 2 where message_id = #{messageId};
        </update>
</mapper>